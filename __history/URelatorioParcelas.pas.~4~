unit URelatorioParcelas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, frxClass, frxDBSet, Vcl.StdCtrls,
  Vcl.ExtCtrls, Vcl.Buttons, acPNG, Vcl.Mask, Vcl.DBCtrls;

type
  TfrmRelatorioParcelas = class(TForm)
    btnImprimir: TBitBtn;
    frxrprtProduto: TfrxReport;
    frxdbdtstProduto: TfrxDBDataset;
    edtCodigoCliente: TDBEdit;
    lblCodigoCliente: TLabel;
    lblCliente: TLabel;
    edtNomeCliente: TDBEdit;
    btnPesquisar: TBitBtn;
    grp1: TGroupBox;
    rgFiltro1: TRadioGroup;
    rgFiltro2: TRadioGroup;
    grp2: TGroupBox;
    lbl1: TLabel;
    medtDataIni: TMaskEdit;
    lbl2: TLabel;
    medtDatafim: TMaskEdit;
    procedure ordena;
    procedure filtrar;
    procedure btnImprimirClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
  private
    { Private declarations }
    varfiltro           :string;
    varRelatorioCliente :Integer;
    procedure nova;
  public
    { Public declarations }
  end;

var
  frmRelatorioParcelas: TfrmRelatorioParcelas;

implementation

uses
  UDados, UPesquisaCliente;

{$R *.dfm}

procedure TfrmRelatorioParcelas.ordena;
begin
 { case rgFiltro2.ItemIndex of
    0:
      varCodigoNome := 'PR_CODIGO';
    1:
      varCodigoNome := 'PR_DESCRICAO';
  end; }
end;

procedure TfrmRelatorioParcelas.btnPesquisarClick(Sender: TObject);
begin
  frmPesquisaCliente := TfrmPesquisaCliente.Create(Self);
  try
    if frmPesquisaCliente.ShowModal= mrOk then
      with DataModule1.sqlCliente do
      begin
        Close;
        DataModule1.cdsCliente.Close;
        DataModule1.cdsParcela.Close;
        DataModule1.sqlCliente.SQL.Text := 'SELECT * FROM CLIENTE WHERE CL_CODIGO ='
        + QuotedStr(IntToStr(frmPesquisaCliente.varcodigoCliente));
          edtCodigoCliente.Text := IntToStr(frmPesquisaCliente.varcodigoCliente);
          varRelatorioCliente := frmPesquisaCliente.varcodigoCliente;
          DataModule1.cdsCliente.Open;
          edtCodigoCliente.Enabled := True;
          edtNomeCliente.Enabled   := True;
       end;
  finally
    frmPesquisaCliente.Free;
  end;
end;

procedure TfrmRelatorioParcelas.filtrar;
begin
  case rgFiltro1.ItemIndex of
    0:
      varfiltro := 'S';
    1:
      varFiltro := 'N';
    2:
      varFiltro := 'T';
  end
end;


procedure TfrmRelatorioParcelas.btnImprimirClick(Sender: TObject);
var
    varDataInicio   :string;
    varDataFim      :string;
begin
    with DataModule1.sqlVenda do
    begin
        Close;
        SQL.Clear;
        SQL.Add(       ' Select ' +
                              '       L.VD_DATA_EMISSAO, ' +
                              '       X.PA_VENDA_ID, ' +
                              '       X.PA_PARCELA, ' +
                              '       X.PA_DATA_VENCIMENTO, ' +
                              '       X.PA_DATA_PGTO, ' +
                              '       X.PA_PAGO, ' +
                              '       X.PA_VALOR ' +
                              ' from PARCELA X ' +
                              ' INNER JOIN VENDA L ' +
                              ' ON L.VD_NUMERO = X.PA_VENDA_ID ' +
                              ' INNER JOIN CLIENTE R ' +
                              ' ON R.CL_CODIGO = L.VD_CLIENTE ' +
                              ' WHERE R.CL_CODIGO = :cliente'
                              ' and  L.VD_DATA_EMISSAO BETWEEN :datainicio and :datafim ' +
                              ' and X.PA_PAGO = :P ' +
                              ' order by 1 ' +
                              ')');

            varDataInicio := FormatDateTime('MM/DD/YYYY',StrToDate(medtDataIni.Text));
            varDataFim    := FormatDateTime('MM/DD/YYYY',StrToDate(medtDataFim.Text));
            ParamByName('datainicio').AsString  :=  varDataInicio;
            ParamByName('datafim').AsString     :=  varDataFim;
            ParamByName('cliente') := varRelatorioCliente;
            filtrar;

      case rgFiltro1.ItemIndex of
      0:
      begin
        SQL.Add('WHERE VD_NUMERO BETWEEN :vendainicio AND :vendafim');
        ParamByName('vendainicio').AsString :=  (edtVenIni.Text);
        ParamByName('vendafim').AsString    :=  (edtVenFim.Text);
      end;
      1:
      begin;
        varDataInicio := FormatDateTime('MM/DD/YYYY',StrToDate(medtDataIni.Text));
        varDataFim    := FormatDateTime('MM/DD/YYYY',StrToDate(medtDataFim.Text);
        ParamByName('datainicio').AsString  :=  varDataInicio;
        ParamByName('datafim').AsString     :=  varDataFim;
      end;
      end;
    end;
 { ordena;
  filtrar;
  DataModule1.cdsProduto.Close;
  DataModule1.sqlProduto.SQL.Clear;
  DataModule1.sqlProduto.SQL.Text :=
    'SELECT PR_CODIGO,PR_DESCRICAO,PR_VALOR_UNITARIO, PR_ESTOQUE, CASE WHEN PR_ATIVO = ' +
    QuotedStr('A') + ' THEN ' + QuotedStr('ATIVO') + ' ELSE ' +
    QuotedStr('INATIVO') + ' END AS PR_ATIVO FROM PRODUTO ';
  if (varFiltro = 'A') or (varFiltro = 'I') then
  begin
    DataModule1.sqlProduto.SQL.Add('WHERE PR_ATIVO =' + QuotedStr(varFiltro));
  end;
  DataModule1.sqlProduto.SQL.Add(' ORDER BY ' + varCodigoNome + ' ASC');
  DataModule1.cdsProduto.Open;
  frxrprtProduto.ShowReport();
  DataModule1.sqlProduto.Close;  }
end;



end.
